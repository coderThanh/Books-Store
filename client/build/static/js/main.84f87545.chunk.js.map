{"version":3,"sources":["../../react-client/src/img/book-shop.svg","../../react-client/src/pages/home.js","../../react-client/src/pages/login.js","../../react-client/src/componet/TopNav.js","../../react-client/src/App.js","../../react-client/src/serviceWorker.js","../../react-client/src/index.js"],"names":["module","exports","__webpack_require__","p","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","products","axios","get","res","data","window","location","assign","sort","a","b","count","setState","react_default","createElement","className","Container","Row","map","product","Col","sm","lg","key","_id","Card","CardImg","top","src","img","alt","CardBody","CardTitle","name","CardText","price","action","method","type","value","Button","outline","color","React","Component","Login","text","email","password","_this$state","FormGroup","row","Label","for","Input","id","placeholder","TopNav","toggle","bind","assertThisInitialized","isOpen","react_router_dom","Navbar","light","expand","NavbarBrand","href","urlLogo","width","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","to","react_router","path","exact","component","App","componet_TopNav","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,seC6DzBC,qBAjDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAO,CACRC,SAAU,IAJCR,iNASGS,IAAMC,IAAI,mBACF,kBADpBC,UACUC,MACZC,OAAOC,SAASC,OAAO,UAE3BJ,EAAIC,KAAKI,KAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,QACpChB,KAAKiB,SAAS,CAACZ,SAAWL,KAAKI,MAAMC,SAAWG,EAAIC,0IAIhD,IACIJ,EAAaL,KAAKI,MAAlBC,SACR,OACIa,EAAAJ,EAAAK,cAAA,OAAKC,UAAU,cACXF,EAAAJ,EAAAK,cAACE,EAAA,EAAD,KACIH,EAAAJ,EAAAK,cAACG,EAAA,EAAD,CAAKF,UAAU,kBAEPf,EAASkB,IAAI,SAACC,GAAD,OACTN,EAAAJ,EAAAK,cAACM,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGP,UAAU,gBAAgBQ,IAAKJ,EAAQK,KACtDX,EAAAJ,EAAAK,cAACW,EAAA,EAAD,CAAMV,UAAU,2BACZF,EAAAJ,EAAAK,cAACY,EAAA,EAAD,CAASX,UAAU,cAAcY,KAAG,EAACC,IAAKT,EAAQU,IAAKC,IAAI,mBAC3DjB,EAAAJ,EAAAK,cAACiB,EAAA,EAAD,KACAlB,EAAAJ,EAAAK,cAACkB,EAAA,EAAD,KAAab,EAAQc,MACrBpB,EAAAJ,EAAAK,cAACoB,EAAA,EAAD,CAAUnB,UAAU,cAApB,IAAoCI,EAAQgB,MAA5C,KACAtB,EAAAJ,EAAAK,cAAA,QAAMsB,OAAO,WAAWC,OAAO,QAC3BxB,EAAAJ,EAAAK,cAAA,SAAOwB,KAAK,SAASL,KAAK,KAAMM,MAAOpB,EAAQK,MAC/CX,EAAAJ,EAAAK,cAAC0B,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,QAAO7B,EAAAJ,EAAAK,cAAA,oCAAkBK,EAAQR,MAA1B,sBAnCtDgC,IAAMC,sCCqCVC,qBAzCX,SAAAA,EAAYtD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACfrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT+C,KAAM,IACNC,MAAQ,GACRC,SAAU,IANCxD,wEAUV,IAAAyD,EACmBtD,KAAKI,MADxBkD,EACGF,MADHE,EACUH,KACf,OACIjC,EAAAJ,EAAAK,cAAA,WACID,EAAAJ,EAAAK,cAACE,EAAA,EAAD,KACAH,EAAAJ,EAAAK,cAAA,OAAKC,UAAU,cACXF,EAAAJ,EAAAK,cAAA,OAAKC,UAAU,cACXF,EAAAJ,EAAAK,cAAA,QAAMsB,OAAO,QAAQC,OAAO,QACxBxB,EAAAJ,EAAAK,cAACoC,EAAA,EAAD,CAAWC,KAAG,GACVtC,EAAAJ,EAAAK,cAACsC,EAAA,EAAD,CAAOC,IAAI,cAAchC,GAAI,GAA7B,SACAR,EAAAJ,EAAAK,cAACM,EAAA,EAAD,CAAKC,GAAI,GACLR,EAAAJ,EAAAK,cAACwC,EAAA,EAAD,CAAQhB,KAAK,QAAQL,KAAK,QAAQsB,GAAG,cAAcC,YAAY,2BAGvE3C,EAAAJ,EAAAK,cAACoC,EAAA,EAAD,CAAWC,KAAG,GACVtC,EAAAJ,EAAAK,cAACsC,EAAA,EAAD,CAAOC,IAAI,iBAAiBhC,GAAI,GAAhC,YACAR,EAAAJ,EAAAK,cAACM,EAAA,EAAD,CAAKC,GAAI,GACLR,EAAAJ,EAAAK,cAACwC,EAAA,EAAD,CAAQhB,KAAK,OAAOL,KAAK,WAAWsB,GAAG,iBAAiBC,YAAY,iBAG5E3C,EAAAJ,EAAAK,cAAC0B,EAAA,EAAD,CAAQE,MAAM,WAAd,sBA/BRC,IAAMC,6BCwDXa,cA5CX,SAAAA,EAAYlE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,IACfjE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgE,GAAA3D,KAAAH,KAAMJ,KAEDmE,OAASlE,EAAKkE,OAAOC,KAAZlE,OAAAmE,EAAA,EAAAnE,CAAAD,IACdA,EAAKO,MAAQ,CACX8D,QAAQ,GALKrE,wEAUfG,KAAKiB,SAAS,CACZiD,QAASlE,KAAKI,MAAM8D,0CAKtB,OACIhD,EAAAJ,EAAAK,cAACgD,EAAA,EAAD,KACAjD,EAAAJ,EAAAK,cAAA,WACAD,EAAAJ,EAAAK,cAACiD,EAAA,EAAD,CAAQrB,MAAM,QAAQsB,OAAK,EAACC,OAAO,KAAKlD,UAAU,QAC9CF,EAAAJ,EAAAK,cAACoD,EAAA,EAAD,CAAaC,KAAK,KACdtD,EAAAJ,EAAAK,cAAA,OAAKc,IAAKwC,IAASC,MAAO,GAAIvC,IAAI,gBAEtCjB,EAAAJ,EAAAK,cAACwD,EAAA,EAAD,CAAeC,QAAS5E,KAAK+D,SAC7B7C,EAAAJ,EAAAK,cAAC0D,EAAA,EAAD,CAAUX,OAAQlE,KAAKI,MAAM8D,OAAQY,QAAM,GACvC5D,EAAAJ,EAAAK,cAAC4D,EAAA,EAAD,CAAK3D,UAAU,UAAU0D,QAAM,GAC3B5D,EAAAJ,EAAAK,cAAC6D,EAAA,EAAD,KACI9D,EAAAJ,EAAAK,cAACgD,EAAA,EAAD,CAAM/C,UAAU,WAAW6D,GAAG,KAA9B,WAEJ/D,EAAAJ,EAAAK,cAAC6D,EAAA,EAAD,KACI9D,EAAAJ,EAAAK,cAACgD,EAAA,EAAD,CAAM/C,UAAU,WAAW6D,GAAG,UAA9B,eAKd/D,EAAAJ,EAAAK,cAAC+D,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW1F,IACjCuB,EAAAJ,EAAAK,cAAC+D,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWnC,aArC1BF,IAAMC,WCHZqC,MARf,WACE,OACEpE,EAAAJ,EAAAK,cAAA,OAAKC,UAAU,OACbF,EAAAJ,EAAAK,cAACoE,EAAD,QCGcC,QACW,cAA7B9E,OAAOC,SAAS8E,UAEe,UAA7B/E,OAAOC,SAAS8E,UAEhB/E,OAAOC,SAAS8E,SAASC,MACvB,2DCVNC,IAASC,OAAO1E,EAAAJ,EAAAK,cAAC0E,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.84f87545.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book-shop.26067b9e.svg\";","import React from \"react\";\r\nimport axios from \"axios\";\r\n// import Cookies from 'universal-cookie';\r\n\r\nimport { Container, Row, Col, Card, CardImg, CardText, CardBody,\r\n    CardTitle, Button } from 'reactstrap';\r\nimport \"./home.css\";\r\n\r\n// const cookies = new Cookies();\r\n\r\n\r\nclass Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state= {\r\n            products: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get('/product');\r\n        if ( typeof(res.data) === \"string\"){\r\n            window.location.assign('/login')\r\n        }\r\n        res.data.sort((a, b) => b.count - a.count);\r\n        this.setState({products : this.state.products = res.data});\r\n\r\n    }\r\n\r\n    render(){\r\n        const { products } = this.state;\r\n        return(\r\n            <div className=\"home-page \">\r\n                <Container >\r\n                    <Row className=\"productContext\">\r\n                        {\r\n                            products.map((product) => (\r\n                                <Col sm={6} lg={3} className=\" px-md-5 mb-5\" key={product._id}>\r\n                                    <Card className=\"cartProduct border-none\" >\r\n                                        <CardImg className=\"product-img\" top src={product.img} alt=\"Card image cap\" />\r\n                                        <CardBody >\r\n                                        <CardTitle>{ product.name }</CardTitle>\r\n                                        <CardText className=\"text-muted\"> { product.price } </CardText>\r\n                                        <form action=\"/product\" method=\"POST\">\r\n                                            <input type=\"hidden\" name=\"id\"  value={product._id}/>\r\n                                            <Button outline color=\"info\"><small> Lượt xem {product.count} </small></Button>\r\n                                        </form>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                        ))\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Container,  Col, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nimport  \"./login.css\";\r\n\r\n\r\nclass Login extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: '0',\r\n            email : '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { email, text } = this.state;\r\n        return(\r\n            <div >\r\n                <Container >\r\n                <div className=\"login-page\">\r\n                    <div className=\"login-form\">\r\n                        <form action=\"/user\" method=\"POST\">\r\n                            <FormGroup row>\r\n                                <Label for=\"clientEmail\" sm={3}>Email</Label>\r\n                                <Col sm={9}>\r\n                                    <Input  type=\"email\" name=\"email\" id=\"clientEmail\" placeholder=\"Input: abc@gmail.com\" />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label for=\"clientPassword\" sm={3}>Password</Label>\r\n                                <Col sm={9}>\r\n                                    <Input  type=\"text\" name=\"password\" id=\"clientPassword\" placeholder=\"Input: 123\" />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <Button color=\"primary\" >Submit</Button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n} from 'reactstrap';\r\n\r\nimport Home from \"../pages/home\";\r\nimport Login from \"../pages/login\";\r\nimport urlLogo from \"../img/book-shop.svg\";\r\n\r\n\r\n\r\nclass TopNav extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n          isOpen: false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n          isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Router>\r\n            <div>\r\n            <Navbar color=\"light\" light expand=\"md\" className=\"px-5\">\r\n                <NavbarBrand href=\"/\">\r\n                    <img src={urlLogo} width={50} alt=\"Logo Brand\"/>\r\n                </NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle} />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Link className=\"nav-link\" to=\"/\"> Home </Link>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Link className=\"nav-link\" to=\"/login\"> Login </Link>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n              <Route path=\"/\" exact component={Home} />\r\n              <Route path=\"/login/\" component={Login} />\r\n            </div>\r\n          </Router>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TopNav;\r\n","import React from 'react';\n\nimport \"./App.css\";\nimport TopNav from \"./componet/TopNav\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopNav />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}